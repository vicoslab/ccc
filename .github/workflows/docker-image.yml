name: Docker Image CI

# build only when new tag is added
on:
  push:
    tags: 
      - '**' 

jobs:  
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - ROOT_IMAGE: ubuntu:18.04
            TAG: ubuntu18.04
          - ROOT_IMAGE: nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04
            TAG: ubuntu18.04-cuda10.0
          - ROOT_IMAGE: nvidia/cuda:10.1-cudnn8-devel-ubuntu18.04
            TAG: ubuntu18.04-cuda10.1
          - ROOT_IMAGE: nvidia/cuda:10.2-cudnn8-devel-ubuntu18.04
            TAG: ubuntu18.04-cuda10.2
          - ROOT_IMAGE: nvidia/cuda:11.0.3-cudnn8-devel-ubuntu18.04
            TAG: ubuntu18.04-cuda11.0.3
          - ROOT_IMAGE: nvidia/cuda:11.0.3-cudnn8-devel-ubuntu20.04
            TAG: ubuntu20.04-cuda11.0.3
          - ROOT_IMAGE: nvidia/cuda:11.1.1-cudnn8-devel-ubuntu20.04
            TAG: ubuntu20.04-cuda11.1.1
          - ROOT_IMAGE: nvidia/cuda:11.2.2-cudnn8-devel-ubuntu20.04
            TAG: ubuntu20.04-cuda11.2.2         
          - ROOT_IMAGE: nvidia/cuda:11.3.0-cudnn8-devel-ubuntu20.04
            TAG: ubuntu20.04-cuda11.3.0
          - ROOT_IMAGE: nvidia/cuda:11.5.0-devel-ubuntu20.04
            TAG: ubuntu20.04-cuda11.5.0
          - ROOT_IMAGE: nvidia/cuda:11.7.0-devel-ubuntu20.04
            TAG: ubuntu20.04-cuda11.7.0
          - ROOT_IMAGE: nvidia/cuda:11.7.0-devel-ubuntu22.04
            TAG: ubuntu22.04-cuda11.7.0
          
    steps:
    - name: Get tag name
      id: get_tag_name
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Build and push base CCC image
      uses: docker/build-push-action@v1.1.0
      #env:
      #    DOCKER_BUILDKIT: 1
      # NOTE: Cannot use DOCKER_BUILDKIT=1 since build will fail due to bugs in buildkit when copying nested folders-
      #       Need to wait for buildkit fix before enabling this
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: vicoslab/ccc
        path: base
        tags: base-${{ steps.get_tag_name.outputs.VERSION }}-${{ matrix.TAG }},base-latest-${{ matrix.TAG }}
        build_args: BUILDKIT_INLINE_CACHE=1,ROOT_IMAGE=${{ matrix.ROOT_IMAGE }}
        cache_froms: vicoslab/ccc:base-latest-${{ matrix.TAG }}
        always_pull: true

    - name: Build and push jupyter CCC image
      uses: docker/build-push-action@v1.1.0
      #env:        
      #    DOCKER_BUILDKIT: 1
      # NOTE: Cannot use DOCKER_BUILDKIT=1 since build will fail due to bugs in buildkit when copying nested folders-
      #       Need to wait for buildkit fix before enabling this        
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: vicoslab/ccc
        path: jupyter
        tags: jupyter-${{ steps.get_tag_name.outputs.VERSION }}-${{ matrix.TAG }},jupyter-latest-${{ matrix.TAG }}
        build_args: BUILDKIT_INLINE_CACHE=1,ROOT_IMAGE=vicoslab/ccc:base-${{ steps.get_tag_name.outputs.VERSION }}-${{ matrix.TAG  }}
        cache_froms: vicoslab/ccc:jupyter-latest-${{ matrix.TAG }},vicoslab/ccc:base-latest-${{ matrix.TAG }}
        always_pull: true

    - name: Build and push X11 CCC image
      uses: docker/build-push-action@v1.1.0
      #env:
      #    DOCKER_BUILDKIT: 1
      # NOTE: Cannot use DOCKER_BUILDKIT=1 since build will fail due to bugs in buildkit when copying nested folders-
      #       Need to wait for buildkit fix before enabling this       
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: vicoslab/ccc
        path: x11
        tags: x2go-${{ steps.get_tag_name.outputs.VERSION }}-${{ matrix.TAG }},x2go-latest-${{ matrix.TAG }}
        build_args: BUILDKIT_INLINE_CACHE=1,ROOT_IMAGE=vicoslab/ccc:base-${{ steps.get_tag_name.outputs.VERSION }}-${{ matrix.TAG  }},X11_SERVER=x2go
        cache_froms: vicoslab/ccc:x2go-latest-${{ matrix.TAG }},vicoslab/ccc:base-latest-${{ matrix.TAG }}
        always_pull: true

    - name: Build and push xpra CCC image
      uses: docker/build-push-action@v1.1.0
      #env:
      #    DOCKER_BUILDKIT: 1
      # NOTE: Cannot use DOCKER_BUILDKIT=1 since build will fail due to bugs in buildkit when copying nested folders-
      #       Need to wait for buildkit fix before enabling this       
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: vicoslab/ccc
        path: x11
        tags: xpra-${{ steps.get_tag_name.outputs.VERSION }}-${{ matrix.TAG }},xpra-latest-${{ matrix.TAG }}
        build_args: BUILDKIT_INLINE_CACHE=1,ROOT_IMAGE=vicoslab/ccc:base-${{ steps.get_tag_name.outputs.VERSION }}-${{ matrix.TAG  }},X11_SERVER=xpra
        cache_froms: vicoslab/ccc:xpra-latest-${{ matrix.TAG }},vicoslab/ccc:base-latest-${{ matrix.TAG }}
        always_pull: true

    - name: Build and push jetbrains-projector CCC image
      uses: docker/build-push-action@v1.1.0
      #env:
      #    DOCKER_BUILDKIT: 1
      # NOTE: Cannot use DOCKER_BUILDKIT=1 since build will fail due to bugs in buildkit when copying nested folders-
      #       Need to wait for buildkit fix before enabling this       
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: vicoslab/ccc
        path: jetbrains-projector
        tags: jetbrains-projector-${{ steps.get_tag_name.outputs.VERSION }}-${{ matrix.TAG }},jetbrains-projector-latest-${{ matrix.TAG }}
        build_args: BUILDKIT_INLINE_CACHE=1,ROOT_IMAGE=vicoslab/ccc:xpra-${{ steps.get_tag_name.outputs.VERSION }}-${{ matrix.TAG  }}
        cache_froms: vicoslab/ccc:jetbrains-projector-latest-${{ matrix.TAG }},vicoslab/ccc:base-latest-${{ matrix.TAG }}
        always_pull: true
